/*1.	Object and Class Example: main within the class*/

class Student {   
int id; 
String name;  
public static void main(String args[]) {  
Student s1=new Student();  
System.out.println(s1.id);
System.out.println(s1.name);  
    }  
} 



/*2.	Object and Class Example: main outside the class */

class Student {   
int id;  
String name;  
}  
class TestStudent1 {   
public static void main (String args[]){  
  Student s1=new Student();  
  System.out.println(s1.id);  
  System.out.println(s1.name);  
   }  
}


// 3. Object and Class Example: Initialization through reference

class Student {   
int id;  
String name;  
}  
class TestStudent2 {   
public static void main(String args[]) { 
Student s1=new Student();  
s1.id=63;   
s1.name="Sanket";  
System.out.println(s1.id+" "+s1.name);  
}
}




// 4.Object and Class Example: Initialization through method

class Student {
int rollno;   
String name;  
void insertRecord(int r, String n) {  
rollno=r;  
name=n;  
    }  
 
void displayInformation(){
    System.out.println(rollno+" "+name);
    }  
}  
class TestStudent4 {  
  public static void main(String args[]) {  
  Student s1=new Student();
  Student s2=new Student();
  s1.insertRecord(111,"sanket");
  s2.insertRecord(222,"rathod");
  s1.displayInformation();
  s2.displayInformation();  
 }  
}





// 5.Object and Class Example: Initialization through constructor

class Employee {  
int id;  
String name;  
float salary;
void insert(int i, String n, float s) {  
id=i;
name=n;
salary=s;  
} 
void display(){
    System.out.println(id+" "+name+" "+salary);
    }  
}  
public class TestEmployee {  
    public static void main(String[] args) {
    Employee e1=new Employee();  
    Employee e2=new Employee();  
    Employee e3=new Employee();      
    e1.insert(101,"sanket",45000);      
    e2.insert(102,"pranay",25000);
    e3.insert(103,"aniket",55000);  
    e1.display();
    e2.display();
    e3.display();  
    }  
}  


