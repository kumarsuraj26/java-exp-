

// 1.Single Inheritance

Source Code:

class Employee  
{    
float salary=34534*12;    
}    
public class Executive extends Employee  
{   
float bonus=3000*6;  
public static void main(String args[])  
{  
Executive obj=new Executive();   
System.out.println("Total salary credited: "+obj.salary);    
System.out.println("Bonus of six months: "+obj.bonus);   
}    
}   






// 2. Multi-level Inheritance

2. Multi-level Inheritance

//super class  
class Student  
{  
int reg_no;  
void getNo(int no)  
{  
reg_no=no;  
}  
void putNo()  
{  
System.out.println("registration number= "+reg_no);  
}  
}  
//intermediate sub class  
class Marks extends Student  
{  
float marks;  
void getMarks(float m)  
{  
marks=m;  
}  
void putMarks()  
{  
System.out.println("marks= "+marks);  
}  
}  
//derived class  
class Sports extends Marks  
{  
float score;  
void getScore(float scr)  
{  
score=scr;  
}  
void putScore()  
{  
System.out.println("score= "+score);  
}  
}  
public class MultilevelInheritanceExample   
{  	
public static void main(String args[])  
{  
Sports ob=new Sports();  
ob.getNo(0987);  
ob.putNo();  
ob.getMarks(78);  
ob.putMarks();  
ob.getScore(68.7);  
ob.putScore();  
}  
}



// 3. Hierarchical Inheritance


3. Hierarchical Inheritance


//parent class  
class Student  
{  
public void methodStudent()  
{  
System.out.println("The method of the class Student invoked.");  
}  
}  
class Science extends Student  
{  
public void methodScience()  
{  
System.out.println("The method of the class Science invoked.");  
}  
}  
class Commerce extends Student  
{  
public void methodCommerce()  
{  
System.out.println("The method of the class Commerce invoked.");  
}  
}  
class Arts extends Student  
{  
public void methodArts()  
{  
System.out.println("The method of the class Arts invoked.");  
}  
}  
public class HierarchicalInheritanceExample  
{  
public static void main(String args[])  
{  
Science sci = new Science();  
Commerce comm = new Commerce();  
Arts art = new Arts();  
//all the sub classes can access the method of super class  
sci.methodStudent();  
comm.methodStudent();  
art.methodStudent();  
}  
}



4. Hybrid Inheritance
//parent class


class GrandFather  
{  
public void show()  
{  
System.out.println("I am grandfather.");  
}  
}  
//inherits GrandFather properties  
class Father extends GrandFather  
{  
public void show()  
{  
System.out.println("I am father.");  
}  
}  
//inherits Father properties  
class Son extends Father  
{  
public void show()  
{  
System.out.println("I am son.");  
}  
}  
//inherits Father properties  
public class Daughter extends Father  
{  
public void show()  
{  
System.out.println("I am a son.");  
}  
public static void main(String args[])  
{  
Daughter obj = new Daughter();  
obj.show();  
}  
}  

